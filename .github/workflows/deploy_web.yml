name: Deploy Flutter Web to GitHub Pages with Peanut

on:
  # Se ejecuta en los pushes a la rama principal
  push:
    branches: ["main"]

  # Permite ejecutar este workflow manualmente desde la pestaña Actions
  workflow_dispatch:

permissions:
  contents: read # Solo necesita leer el repo, no escribirlo
  pages: write # Necesita permisos para escribir en GitHub Pages
  id-token: write # Necesario para la autenticación con GitHub Pages

# Permite solo un despliegue concurrente
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.32.5

      - name: Install dependencies
        run: flutter pub get

      - name: Install peanut
        run: flutter pub global activate peanut

      - name: Build web app with Peanut
        run: |
          echo "Ejecutando peanut para generar un build limpio sin symlinks..."
          # Usamos --dry-run para que peanut ejecute 'flutter build' pero NO los comandos de git.
          # Esto nos deja con un directorio 'build/web' limpio y listo para ser desplegado.
          flutter pub global run peanut --extra-args "--base-href=/calcular_parte/" --directory build/web --dry-run

      - name: Verify build output
        run: |
          echo "Contenido del directorio de build:"
          ls -la build/web
          echo "Verificando que no queden symlinks..."
          if [ -n "$(find build/web -type l)" ]; then
            echo "Error: Se encontraron symlinks inesperadamente después del build con peanut."
            exit 1
          else
            echo "Éxito: El build de peanut no contiene symlinks."
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./build/web

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
